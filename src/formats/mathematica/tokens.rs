#[derive(Copy,Clone,Eq,PartialEq,Ord,PartialOrd,Hash,Debug)]
pub(crate) enum Token<'a> {
    Symbol(&'a [u8]),
    Integer(&'a [u8]),
    Real(&'a [u8]),
    String(&'a [u8]),
    AddTo,
    Alternatives,
    And,
    LeftAngleBracket,
    RightAngleBracket,
    Apply,
    Apply1,
    LeftAssociation,
    RightAssociation,
    Backslash,
    Because,
    Blank,
    BlankNullSequence,
    BlankSequence,
    LeftBracket,
    RightBracket,
    Cap,
    CapitalDifferentialD,
    LeftCeiling,
    RightCeiling,
    CenterDot,
    CircleDot,
    CircleMinus,
    CirclePlus,
    CircleTimes,
    Colon,
    Comma,
    Composition,
    CompoundExpression,
    Condition,
    Conditioned,
    Congruent,
    Conjugate,
    ConjugateTranspose,
    ContinuedFractionK,
    Coproduct,
    Cross,
    Cup,
    CupCap,
    Decrement,
    Degree,
    Del,
    Diamond,
    DifferenceDelta,
    DirectedEdge,
    DiscreteRatio,
    DiscreteShift,
    Distributed,
    Divide,
    DivideBy,
    Dot,
    DotEqual,
    LeftDoubleBracketingBar,
    RightDoubleBracketingBar,
    DoubleDownArrow,
    DoubleLeftTee,
    DoubleRightTee,
    DoubleUpArrow,
    DoubleVerticalBar,
    DownArrow,
    DownArrowBar,
    DownLeftRightVector,
    DownLeftTeeVector,
    DownLeftVector,
    DownLeftVectorBar,
    DownRightTeeVector,
    DownRightVector,
    DownRightVectorBar,
    DownTee,
    DownTeeArrow,
    E,
    Element,
    Equal,
    EqualTilde,
    Equilibrium,
    Equivalent,
    Exists,
    LeftFloor,
    RightFloor,
    ForAll,
    Function,
    Get,
    Greater,
    GreaterEqual,
    GreaterEqualLess,
    GreaterFullEqual,
    GreaterGreater,
    GreaterLess,
    GreaterSlantEqual,
    GreaterTilde,
    HumpDownHump,
    HumpEqual,
    I,
    Implies,
    Increment,
    Infinity,
    Infix,
    Integrate,
    IntegralMeasure,
    Intersection,
    LeftDownTeeVector,
    LeftDownVector,
    LeftDownVectorBar,
    LeftRightVector,
    LeftTee,
    LeftTeeVector,
    LeftTriangle,
    LeftTriangleBar,
    LeftTriangleEqual,
    LeftUpDownVector,
    LeftUpTeeVector,
    LeftUpVector,
    LeftUpVectorBar,
    LeftVector,
    LeftVectorBar,
    Less,
    LessEqual,
    LessEqualGreater,
    LessFullEqual,
    LessGreater,
    LessLess,
    LessSlantEqual,
    LessTilde,
    Limit,
    LeftList,
    RightList,
    Map,
    MapAll,
    MaxLimit,
    MessageName,
    MinLimit,
    MinusPlus,
    Nand,
    NestedGreaterGreater,
    NestedLessLess,
    NonCommutativeMultiply,
    Nor,
    Not,
    NotCongruent,
    NotCupCap,
    NotDoubleVerticalBar,
    NotElement,
    NotExists,
    NotGreater,
    NotGreaterEqual,
    NotGreaterFullEqual,
    NotGreaterGreater,
    NotGreaterLess,
    NotGreaterSlantEqual,
    NotGreaterTilde,
    NotHumpDownHump,
    NotHumpEqual,
    NotLeftTriangle,
    NotLeftTriangleBar,
    NotLeftTriangleEqual,
    NotLess,
    NotLessEqual,
    NotLessFullEqual,
    NotLessGreater,
    NotLessLess,
    NotLessSlantEqual,
    NotLessTilde,
    NotNestedGreaterGreater,
    NotNestedLessLess,
    NotPrecedes,
    NotPrecedesEqual,
    NotPrecedesSlantEqual,
    NotPrecedesTilde,
    NotReverseElement,
    NotRightTriangle,
    NotRightTriangleBar,
    NotRightTriangleEqual,
    NotSquareSubset,
    NotSquareSubsetEqual,
    NotSquareSuperset,
    NotSquareSupersetEqual,
    NotSubset,
    NotSubsetEqual,
    NotSucceeds,
    NotSucceedsEqual,
    NotSucceedsSlantEqual,
    NotSucceedsTilde,
    NotSuperset,
    NotSupersetEqual,
    NotTilde,
    NotTildeEqual,
    NotTildeFullEqual,
    NotTildeTilde,
    NotVerticalBar,
    Optional,
    Or,
    Out,
    LeftPart,
    RightPart,
    PatternTest,
    Pi,
    Piecewise,
    Plus,
    PlusMinus,
    Postfix,
    Power,
    Precedes,
    PrecedesEqual,
    PrecedesSlantEqual,
    PrecedesTilde,
    Prefix,
    Proportion,
    Proportional,
    Repeated,
    RepeatedNull,
    ReplaceAll,
    ReplaceRepeated,
    ReverseElement,
    ReverseEquilibrium,
    ReverseUpEquilibrium,
    RightDownTeeVector,
    RightDownVector,
    RightDownVectorBar,
    RightTee,
    RightTeeVector,
    RightTriangle,
    RightTriangleBar,
    RightTriangleEqual,
    RightUpDownVector,
    RightUpTeeVector,
    RightUpVector,
    RightUpVectorBar,
    RightVector,
    RightVectorBar,
    Rule,
    RuleDelayed,
    SameQ,
    Set,
    SetDelayed,
    Slot,
    SlotSequence,
    SmallCircle,
    Span,
    Sqrt,
    Square,
    LeftSquareBracket,
    RightSquareBracket,
    SquareIntersection,
    SquareSubset,
    SquareSubsetEqual,
    SquareSuperset,
    SquareSupersetEqual,
    SquareUnion,
    Star,
    StringExpression,
    StringJoin,
    Subset,
    SubsetEqual,
    Subtract,
    SubtractFrom,
    Succeeds,
    SucceedsEqual,
    SucceedsSlantEqual,
    SucceedsTilde,
    SuchThat,
    SuperDagger,
    Superset,
    SupersetEqual,
    Tag,
    Therefore,
    Tilde,
    TildeEqual,
    TildeFullEqual,
    TildeTilde,
    Times,
    TimesBy,
    Transpose,
    TwoWayRule,
    UndirectedEdge,
    Unequal,
    Union,
    UnionPlus,
    UnsameQ,
    Unset,
    UpArrow,
    UpArrowBar,
    UpEquilibrium,
    UpTee,
    VectorGreater,
    VectorGreaterEqual,
    VectorLess,
    VectorLessEqual,
    Vee,
    VerticalBar,
    VerticalSeparator,
    VerticalTilde,
    Wedge,
    Xnor,
    Xor,
}

// STR_TO_TOKEN.keys().map(|k| k.chars().count()).max().unwrap();
pub(crate) const MAX_TOKEN_STR_LEN: usize = 3;

// obtained from Mathematica 12.0:
//
// ```Mathematica
// Select[
//     WolframLanguageData[
//         WolframLanguageData["Entities"],
//         {"Name", "ShortNotations"}
//     ],
//     #[[2]] =!= Missing["NotApplicable"] &
// ]
// ```
// see https://www.robertjacobson.dev/defining-the-wolfram-language-part-1-finding-operators
// some frequent ascii tokens added by hand
pub(crate) const STR_TO_TOKEN: phf::Map<&'static str, Token<'static>> = phf_map!{
    "+=" => Token::AddTo,
    "|" => Token::Alternatives,
    "&&" => Token::And,
    "∧" => Token::And,
    "〈" => Token::LeftAngleBracket,
    "〉" => Token::RightAngleBracket,
    "@@" => Token::Apply,
    "@@@" => Token::Apply1,
    "" => Token::LeftAssociation,
    "" => Token::RightAssociation,
    "∖" => Token::Backslash,
    "∵" => Token::Because,
    "_" => Token::Blank,
    "___" => Token::BlankNullSequence,
    "__" => Token::BlankSequence,
    "(" => Token::LeftBracket,
    ")" => Token::RightBracket,
    //"" => Token::BracketingBar,
    "⌢" => Token::Cap,
    "" => Token::CapitalDifferentialD,
    "⌈" => Token::LeftCeiling,
    "⌉" => Token::RightCeiling,
    "·" => Token::CenterDot,
    "⊙" => Token::CircleDot,
    "⊖" => Token::CircleMinus,
    "⊕" => Token::CirclePlus,
    "⊗" => Token::CircleTimes,
    "∶" => Token::Colon,
    "," => Token::Comma,
    "@*" => Token::Composition,
    ";" => Token::CompoundExpression,
    "/;" => Token::Condition,
    "" => Token::Conditioned,
    "≡" => Token::Congruent,
    "" => Token::Conjugate,
    "" => Token::ConjugateTranspose,
    "" => Token::ConjugateTranspose,
    "" => Token::ContinuedFractionK,
    "∐" => Token::Coproduct,
    "" => Token::Cross,
    //"∖[CubeRoot]" => Token::CubeRoot,
    "⌣" => Token::Cup,
    "≍" => Token::CupCap,
    //"∇_" => Token::Curl,
    //"∂_" => Token::D,
    "--" => Token::Decrement,
    "°" => Token::Degree,
    "∇" => Token::Del,
    "⋄" => Token::Diamond,
    "" => Token::DifferenceDelta,
    "" => Token::DirectedEdge,
    "" => Token::DiscreteRatio,
    "" => Token::DiscreteShift,
    "" => Token::Distributed,
    //"∇….…" => Token::Div,
    "/" => Token::Divide,
    "÷" => Token::Divide,
    "/=" => Token::DivideBy,
    "." => Token::Dot,
    "≐" => Token::DotEqual,
    "" => Token::LeftDoubleBracketingBar,
    "" => Token::RightDoubleBracketingBar,
    "⇓" => Token::DoubleDownArrow,
    "⫤" => Token::DoubleLeftTee,
    "⊨" => Token::DoubleRightTee,
    "⇑" => Token::DoubleUpArrow,
    "∥" => Token::DoubleVerticalBar,
    "↓" => Token::DownArrow,
    "⤓" => Token::DownArrowBar,
    "⥐" => Token::DownLeftRightVector,
    "⥞" => Token::DownLeftTeeVector,
    "↽" => Token::DownLeftVector,
    "⥖" => Token::DownLeftVectorBar,
    "⥟" => Token::DownRightTeeVector,
    "⇁" => Token::DownRightVector,
    "⥗" => Token::DownRightVectorBar,
    "⊤" => Token::DownTee,
    "↧" => Token::DownTeeArrow,
    "" => Token::E,
    "∈" => Token::Element,
    "==" => Token::Equal,
    "" => Token::Equal,
    "" => Token::Equal,
    "≂" => Token::EqualTilde,
    "⇌" => Token::Equilibrium,
    "⧦" => Token::Equivalent,
    "∃" => Token::Exists,
    "⌊" => Token::LeftFloor,
    "⌋" => Token::RightFloor,
    "∀" => Token::ForAll,
    "&" => Token::Function,
    "<<" => Token::Get,
    //"∇_" => Token::Grad,
    ">" => Token::Greater,
    ">=" => Token::GreaterEqual,
    "≥" => Token::GreaterEqual,
    "⋛" => Token::GreaterEqualLess,
    "≧" => Token::GreaterFullEqual,
    "≫" => Token::GreaterGreater,
    "≷" => Token::GreaterLess,
    "⩾" => Token::GreaterSlantEqual,
    "≳" => Token::GreaterTilde,
    "≎" => Token::HumpDownHump,
    "≏" => Token::HumpEqual,
    "" => Token::I,
    "" => Token::I,
    "" => Token::Implies,
    "++" => Token::Increment,
    "∞" => Token::Infinity,
    "~" => Token::Infix,
    "∫" => Token::Integrate,
    "" => Token::IntegralMeasure,
    "⋂" => Token::Intersection,
    //"∇^2_" => Token::Laplacian,
    "⥡" => Token::LeftDownTeeVector,
    "⇃" => Token::LeftDownVector,
    "⥙" => Token::LeftDownVectorBar,
    "⥎" => Token::LeftRightVector,
    "[" => Token::LeftSquareBracket,
    "]" => Token::RightSquareBracket,
    "⊣" => Token::LeftTee,
    "⥚" => Token::LeftTeeVector,
    "⊲" => Token::LeftTriangle,
    "⧏" => Token::LeftTriangleBar,
    "⊴" => Token::LeftTriangleEqual,
    "⥑" => Token::LeftUpDownVector,
    "⥠" => Token::LeftUpTeeVector,
    "↿" => Token::LeftUpVector,
    "⥘" => Token::LeftUpVectorBar,
    "↼" => Token::LeftVector,
    "⥒" => Token::LeftVectorBar,
    "<" => Token::Less,
    "<=" => Token::LessEqual,
    "≤" => Token::LessEqual,
    "⋚" => Token::LessEqualGreater,
    "≦" => Token::LessFullEqual,
    "≶" => Token::LessGreater,
    "≪" => Token::LessLess,
    "⩽" => Token::LessSlantEqual,
    "≲" => Token::LessTilde,
    "" => Token::Limit,
    "{" => Token::LeftList,
    "}" => Token::RightList,
    "/@" => Token::Map,
    "//@" => Token::MapAll,
    "" => Token::MaxLimit,
    "::" => Token::MessageName,
    "" => Token::MinLimit,
    "∓" => Token::MinusPlus,
    "⊼" => Token::Nand,
    "⪢" => Token::NestedGreaterGreater,
    "⪡" => Token::NestedLessLess,
    "**" => Token::NonCommutativeMultiply,
    "⊽" => Token::Nor,
    "!" => Token::Not,
    "¬" => Token::Not,
    "≢" => Token::NotCongruent,
    "≭" => Token::NotCupCap,
    "∦" => Token::NotDoubleVerticalBar,
    "∉" => Token::NotElement,
    "∄" => Token::NotExists,
    "≯" => Token::NotGreater,
    "≱" => Token::NotGreaterEqual,
    "≩" => Token::NotGreaterFullEqual,
    "" => Token::NotGreaterGreater,
    "≹" => Token::NotGreaterLess,
    "" => Token::NotGreaterSlantEqual,
    "≵" => Token::NotGreaterTilde,
    "" => Token::NotHumpDownHump,
    "" => Token::NotHumpEqual,
    "⋪" => Token::NotLeftTriangle,
    "" => Token::NotLeftTriangleBar,
    "⋬" => Token::NotLeftTriangleEqual,
    "≮" => Token::NotLess,
    "≰" => Token::NotLessEqual,
    "≨" => Token::NotLessFullEqual,
    "≸" => Token::NotLessGreater,
    "" => Token::NotLessLess,
    "" => Token::NotLessSlantEqual,
    "≴" => Token::NotLessTilde,
    "" => Token::NotNestedGreaterGreater,
    "" => Token::NotNestedLessLess,
    "⊀" => Token::NotPrecedes,
    "" => Token::NotPrecedesEqual,
    "⋠" => Token::NotPrecedesSlantEqual,
    "⋨" => Token::NotPrecedesTilde,
    "∌" => Token::NotReverseElement,
    "⋫" => Token::NotRightTriangle,
    "" => Token::NotRightTriangleBar,
    "⋭" => Token::NotRightTriangleEqual,
    "" => Token::NotSquareSubset,
    "⋢" => Token::NotSquareSubsetEqual,
    "" => Token::NotSquareSuperset,
    "⋣" => Token::NotSquareSupersetEqual,
    "⊄" => Token::NotSubset,
    "⊈" => Token::NotSubsetEqual,
    "⊁" => Token::NotSucceeds,
    "" => Token::NotSucceedsEqual,
    "⋡" => Token::NotSucceedsSlantEqual,
    "⋩" => Token::NotSucceedsTilde,
    "⊅" => Token::NotSuperset,
    "⊉" => Token::NotSupersetEqual,
    "≁" => Token::NotTilde,
    "≄" => Token::NotTildeEqual,
    "≇" => Token::NotTildeFullEqual,
    "≉" => Token::NotTildeTilde,
    "" => Token::NotVerticalBar,
    ":" => Token::Optional,
    "||" => Token::Or,
    "∨" => Token::Or,
    "%" => Token::Out,
    "[[" => Token::LeftPart,
    "]]" => Token::RightPart,
    // "" => Token::LeftPart,
    // "" => Token::RightPart,
    // ":" => Token::Pattern,
    "?" => Token::PatternTest,
    "π" => Token::Pi,
    "" => Token::Piecewise,
    "+" => Token::Plus,
    "±" => Token::PlusMinus,
    "//" => Token::Postfix,
    "^" => Token::Power,
    //"--" => Token::PreDecrement,
    //"++" => Token::PreIncrement,
    "≺" => Token::Precedes,
    "⪯" => Token::PrecedesEqual,
    "≼" => Token::PrecedesSlantEqual,
    "≾" => Token::PrecedesTilde,
    "@" => Token::Prefix,
    //"∏_=^" => Token::Product,
    "∷" => Token::Proportion,
    "∝" => Token::Proportional,
    ".." => Token::Repeated,
    "..." => Token::RepeatedNull,
    "/." => Token::ReplaceAll,
    "//." => Token::ReplaceRepeated,
    "∋" => Token::ReverseElement,
    "⇋" => Token::ReverseEquilibrium,
    "⥯" => Token::ReverseUpEquilibrium,
    "⥝" => Token::RightDownTeeVector,
    "⇂" => Token::RightDownVector,
    "⥕" => Token::RightDownVectorBar,
    "⊢" => Token::RightTee,
    "⥛" => Token::RightTeeVector,
    "⊳" => Token::RightTriangle,
    "⧐" => Token::RightTriangleBar,
    "⊵" => Token::RightTriangleEqual,
    "⥏" => Token::RightUpDownVector,
    "⥜" => Token::RightUpTeeVector,
    "↾" => Token::RightUpVector,
    "⥔" => Token::RightUpVectorBar,
    "⇀" => Token::RightVector,
    "⥓" => Token::RightVectorBar,
    "=>" => Token::Rule,
    "" => Token::Rule,
    ":>" => Token::RuleDelayed,
    "" => Token::RuleDelayed,
    "===" => Token::SameQ,
    "=" => Token::Set,
    ":=" => Token::SetDelayed,
    "#" => Token::Slot,
    "##" => Token::SlotSequence,
    "∘" => Token::SmallCircle,
    ";;" => Token::Span,
    "√" => Token::Sqrt,
    "" => Token::Square,
    "⊓" => Token::SquareIntersection,
    "⊏" => Token::SquareSubset,
    "⊑" => Token::SquareSubsetEqual,
    "⊐" => Token::SquareSuperset,
    "⊒" => Token::SquareSupersetEqual,
    "⊔" => Token::SquareUnion,
    "⋆" => Token::Star,
    "~~" => Token::StringExpression,
    "<>" => Token::StringJoin,
    "⊂" => Token::Subset,
    "⊆" => Token::SubsetEqual,
    "-" => Token::Subtract,
    "-=" => Token::SubtractFrom,
    "≻" => Token::Succeeds,
    "⪰" => Token::SucceedsEqual,
    "≽" => Token::SucceedsSlantEqual,
    "≿" => Token::SucceedsTilde,
    "∍" => Token::SuchThat,
    //"∑_=^" => Token::Sum,
    "^†" => Token::SuperDagger,
    "⊃" => Token::Superset,
    "⊇" => Token::SupersetEqual,
    "/:" => Token::Tag,
    // "/:…=" => Token::TagSet,
    // "/:…:=" => Token::TagSetDelayed,
    // "/:…=." => Token::TagUnset,
    "∴" => Token::Therefore,
    "∼" => Token::Tilde,
    "≃" => Token::TildeEqual,
    "≅" => Token::TildeFullEqual,
    "≈" => Token::TildeTilde,
    "*" => Token::Times,
    "×" => Token::Times,
    "*=" => Token::TimesBy,
    "" => Token::Transpose,
    "" => Token::TwoWayRule,
    "" => Token::UndirectedEdge,
    "!=" => Token::Unequal,
    "≠" => Token::Unequal,
    "⋃" => Token::Union,
    "⊎" => Token::UnionPlus,
    "=!=" => Token::UnsameQ,
    "=." => Token::Unset,
    "↑" => Token::UpArrow,
    "⤒" => Token::UpArrowBar,
    "⥮" => Token::UpEquilibrium,
    "⊥" => Token::UpTee,
    "" => Token::VectorGreater,
    "" => Token::VectorGreaterEqual,
    "" => Token::VectorLess,
    "" => Token::VectorLessEqual,
    "⋁" => Token::Vee,
    "" => Token::VerticalBar,
    "" => Token::VerticalSeparator,
    "≀" => Token::VerticalTilde,
    "⋀" => Token::Wedge,
    "" => Token::Xnor,
    "⊻" => Token::Xor,
};
